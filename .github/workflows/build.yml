name: Build CZERTAINLY Interfaces
on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  check:
    if: github.event_name != 'push'
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn -B verify
  build:
    if: github.event_name != 'pull_request'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#      - name: Build OpenAPI
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          curl \
#            -X POST \
#            -H "Accept: application/vnd.github+json" \
#            -H "Authorization: token ${{ secrets.GH_ACTIONS_PERSONAL_ACCESS_TOKEN }}" \
#            https://api.github.com/repos/3KeyCompany/CZERTAINLY-Interface-Documentation/actions/workflows/publish.yml/dispatches \
#            -d '{"ref":"develop"}'
      - name: Trigger build OpenAPI
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_ACTIONS_PERSONAL_ACCESS_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: '3KeyCompany',
              repo: 'CZERTAINLY-Interface-Documentation',
              workflow_id: 'publish.yml',
              ref: 'develop',
            })